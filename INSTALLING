INSTALLING

rpg is installed with a conventional `./configure; make; make install' process.
This document describes where to obtain the latest release and how to customize
the installation for different configurations.

See the HACKING file for information on setting up a temporary working
environment for development or test-driving rpg without modifying your system
directories.

OBTAINING
---------

If you have git, the easiest way to obtain the latest sources is to clone the
repository:

    git clone git://github.com/rtomayko/rpg.git
    cd rpg

Release tarballs are also available from the rpg downloads page:

    http://github.com/rtomayko/rpg/downloads

Start by fetching and extracting the latest rpg release into a temporary
directory, and then switch into it:

    curl -L http://github.com/downloads/rtomayko/rpg/rpg-0.2.0.tar.gz | tar xvzf -
    cd rpg-0.2.0

INSTALLING
----------

rpg works with two trees: one for rpg binaries and supporting code, and one
for installed packages and the package database. It is possible to have either
of these trees be standalone, or located under an existing ruby installation.

To install rpg under the default location (`/usr/local`):

    ./configure
    make
    sudo make install

Ruby packages will be installed under your ruby installation
(e.g. /usr/local/lib/ruby or /usr/lib/ruby). Assuming that /usr/local/bin
is in your PATH environment variable no further configuration is necessary.

To install rpg into a self-contained directory off your home:

    ./configure --prefix=~/.rpg --rpgdir ~/.packages
    make
    make install

Ruby packages will be installed in ~/.packages/lib, and binaries
for ruby packages in ~/.packages/bin, requiring these directories be added
to RUBYOPT and PATH as follows:

    RUBYOPT="$RUBYOPT -I~/.packages/lib -I~/.packages/lib/i386-freebsd8"
    PATH="$PATH:~/.packages/bin"

The architecture-dependent directory (~/.packages/lib/i386-freebsd8) is
probably different for your system, adjust the command accordingly.

You can find out your architecture by running:

    echo 'puts RbConfig::CONFIG["arch"]' | ruby -rrbconfig

You might need to use $HOME instead of ~ depending on your shell/environment.

rpg itself requires that its `bin` directory (`<prefix>/bin`) be on your PATH
as well (this is needed for rpg operations on packages, not for using packages
installed by rpg). If it is not there already add the following to your
~/.bashrc or ~/.profile to ensure rpg is available to all new shell sessions:

    PATH="$PATH:<prefix>/bin"

To install rpg into an existing system-wide ruby installation:

    ./configure --with-ruby
    make
    sudo make install

To install rpg into a specific ruby installation:

    ./configure --with-ruby=~/.rvm/rubies/ruby187
    make
    make install

In both of these cases packages will be installed under the ruby installation
tree so that no further configuration of environment variables is needed.

The installation puts files under the bin, libexec, and share/man directories of
the configured <prefix>. See `configure --help' for information on tuning
these default locations.

On FreeBSD, if installing as an unprivileged user, you might receive an error
during `make install` complaining about insufficient permissions for `chown`.
To fix it, configure with `RB_USER_INSTALL=yes` as follows:

    RB_USER_INSTALL=yes ./configure --prefix=... [other options...]
